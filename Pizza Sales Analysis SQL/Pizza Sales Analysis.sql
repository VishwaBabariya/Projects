#PIZZA PROJECT
CREATE DATABASE PIZZA;
USE PIZZA;


SELECT * FROM PIZZAS; #PIZZA_ID, PIZZA_TYPE_ID, SIZE, PRICE
SELECT * FROM PIZZA_TYPES; #PIZZA_TYPE_ID, NAME, CATEGORY, INGREDIENTS
SELECT * FROM PIZZA_ORDERS; #ORDER_ID, DATE, TIME
SELECT * FROM PIZZA_ORDER_DETAILS; #ORDER_DETAILS_ID, ORDER_ID, PIZZA_ID, QUANTITY

# 1)QUERY THE TOTAL NUMBER OF ORDERS PLACED?
SELECT COUNT(ORDER_ID)	 TOTAL_ORDERS FROM PIZZA_ORDERS;

# 2)QUERY THE TOTAL NUMBER OF PIZZA TYPES?
SELECT COUNT(PIZZA_TYPE_ID) TOTAL_PIZZATYPE_IDS FROM PIZZA_TYPES;

# 3)QUERY THE TOTAL NUMBER OF PIZZA ID TYPES?
SELECT COUNT(PIZZA_ID) TOTAL_PIZZA_IDS FROM PIZZAS;

# 4)QUERY TOTAL ORDER QUANTITY PLACED?
SELECT SUM(QUANTITY) TOTAL_ORDER_QTY FROM PIZZA_ORDER_DETAILS;

# 5)QUERY THE FIRST DATE OF TRANSACTION AND THE LAST DATE OF TRANSACTION?
SELECT MIN(DATE) FIRST_DATE, MAX(DATE) LAST_DATE FROM PIZZA_ORDERS;

# 6)QUERY THE TOTAL REVENUE GENERATED?
SELECT ROUND(SUM(A.PRICE * B.QUANTITY),2) TOTAL_REVENUE FROM 
PIZZAS A INNER JOIN PIZZA_ORDER_DETAILS B ON A.PIZZA_ID = B.PIZZA_ID; 

# 7)QUERY THE HIGHEST PRICED PIZZA? (DISPLAY PIZZA NAME, PRICE)
SELECT A.NAME, B.PRICE PIZZA_PRICE FROM PIZZA_TYPES A INNER JOIN PIZZAS B 
ON A.PIZZA_TYPE_ID = B.PIZZA_TYPE_ID ORDER BY PIZZA_PRICE DESC LIMIT 1;

# 8)QUERY THE LOWEST PRICED PIZZA? (DISPLAY PIZZA NAME, PRICE)
SELECT A.NAME, B.PRICE PIZZA_PRICE FROM PIZZA_TYPES A INNER JOIN PIZZAS B 
ON A.PIZZA_TYPE_ID = B.PIZZA_TYPE_ID ORDER BY PIZZA_PRICE ASC LIMIT 1;

# 9)QUERY THE PIZZA ORDERED QTY BY SIZE? (DISPLAY SIZE AND ORDER QTY)
SELECT A.SIZE, SUM(B.QUANTITY) FROM PIZZAS A JOIN PIZZA_ORDER_DETAILS B 
ON A.PIZZA_ID = B.PIZZA_ID GROUP BY A.SIZE ORDER BY A.SIZE;

# 10)QUERY THE PIZZA ORDERED QTY BY CATEGORY?
SELECT A.CATEGORY, SUM(C.QUANTITY) TOTAL_ORDER_QTY FROM
PIZZA_TYPES A JOIN PIZZAS B ON A.PIZZA_TYPE_ID = B.PIZZA_TYPE_ID 
JOIN PIZZA_ORDER_DETAILS C ON B.PIZZA_ID = C.PIZZA_ID GROUP BY A.CATEGORY;

# 11) QUERY THE PIZZA ORDERED QTY BY PIZZA NAME?
SELECT A.NAME, SUM(C.QUANTITY) TOTAL_ORDER_QTY FROM (
SELECT A.NAME, B.PIZZA_ID FROM PIZZA_TYPES A JOIN PIZZAS B
ON A.PIZZA_TYPE_ID = B.PIZZA_TYPE_ID) A JOIN PIZZA_ORDER_DETAILS C 
ON A.PIZZA_ID = C.PIZZA_ID GROUP BY A.NAME ORDER BY TOTAL_ORDER_QTY DESC;

# 12)QUERY THE TOP 7 PIZZAS BASED ON THE ORDERS QTY? (DISPLAY PIZZA NAME, ORDER QTY)
SELECT A.NAME, SUM(C.QUANTITY) TOTAL_ORDER_QTY FROM (
SELECT A.NAME, B.PIZZA_ID FROM PIZZA_TYPES A JOIN PIZZAS B
ON A.PIZZA_TYPE_ID = B.PIZZA_TYPE_ID) A JOIN PIZZA_ORDER_DETAILS C 
ON A.PIZZA_ID = C.PIZZA_ID GROUP BY A.NAME ORDER BY TOTAL_ORDER_QTY DESC LIMIT 7;

# 13)QUERY THE DISTRIBUTION(QUANTITY) OF ORDERS BY HOUR OF DAY? 
SELECT HOUR(A.TIME) HOUR, SUM(B.QUANTITY) TTL_DISTRIBUTED_QTY 
FROM PIZZA_ORDERS A JOIN PIZZA_ORDER_DETAILS B ON A.ORDER_ID = B.ORDER_ID
GROUP BY HOUR ORDER BY TTL_DISTRIBUTED_QTY DESC;

# 14)QUERY THE PIZZA ORDER QTY BY DATE AND CALCULATE THE AVERAGE NUMBERS OF PIZZAS ORDERED PER DAY?
SELECT ROUND(AVG(A.TOTAL_QTY)) AVG_ORDERS_PER_DAY FROM(
SELECT A.DATE, SUM(B.QUANTITY) TOTAL_QTY FROM PIZZA_ORDERS A JOIN PIZZA_ORDER_DETAILS B 
ON A.ORDER_ID = B.ORDER_ID GROUP BY A.DATE) A; 

# 15)QUERY THE TOP 7 PIZZA BY REVENUE? (DISPLAY PIZZA NAME, REVENUE, ORDER QTY)
SELECT A.NAME, SUM(A.PRICE * B.QUANTITY) REVENUE, SUM(B.QUANTITY) ORDER_QTY FROM (
SELECT A.NAME, B.PRICE, B.PIZZA_ID FROM PIZZA_TYPES A JOIN PIZZAS B ON A .PIZZA_TYPE_ID = B.PIZZA_TYPE_ID) A 
JOIN PIZZA_ORDER_DETAILS B ON A.PIZZA_ID = B.PIZZA_ID GROUP BY A.NAME ORDER BY REVENUE DESC LIMIT 7;

# 16)QUERY THE PERECENTAGE CONTRIBUTION OF EACH PIZZA CATEGORY TO TOTAL REVENUE?
SELECT A.CATEGORY, SUM(A.PRICE * B.QUANTITY) / (SELECT SUM(A.PRICE * B.QUANTITY) TOTAL_REVENUE FROM PIZZAS A JOIN PIZZA_ORDER_DETAILS B 
ON A.PIZZA_ID = B.PIZZA_ID) * 100 REVENUE_PERCENTAGE FROM (
SELECT A.CATEGORY, B.PRICE, B.PIZZA_ID FROM PIZZA_TYPES A JOIN PIZZAS B ON A.PIZZA_TYPE_ID = B.PIZZA_TYPE_ID) A
JOIN PIZZA_ORDER_DETAILS B ON A.PIZZA_ID = B.PIZZA_ID GROUP BY A.CATEGORY;

# 17)ANALYSE THE QUMULATIVE REVENUE GENERATED OVER DATE?
SELECT DATE, SUM(TOTAL_REVENUE) OVER(ORDER BY DATE) CUMULATIVE_REVENUE FROM (
SELECT B.DATE, SUM(A.REVENUE) TOTAL_REVENUE FROM (
SELECT A.ORDER_ID, SUM(B.PRICE * A.QUANTITY) REVENUE FROM PIZZA_ORDER_DETAILS A JOIN PIZZAS B 
ON A.PIZZA_ID = B.PIZZA_ID GROUP BY A.ORDER_ID) A JOIN PIZZA_ORDERS B ON A.ORDER_ID = B.ORDER_ID
GROUP BY B.DATE) REV;

# 18)DETERMINE THE TOP 3 MOST ORDERED PIZZAS NAMES BASED ON REVENUE FOR EACH CATEGORY? - WANT TOP 3 FOR EACH CATEGORY
SELECT * FROM (SELECT *, DENSE_RANK() OVER(PARTITION BY CATEGORY ORDER BY REVENUE DESC) AS RNK 
FROM (SELECT A.NAME, A.CATEGORY, SUM(A.PRICE * B.QUANTITY) REVENUE FROM (
SELECT A.NAME, A.CATEGORY, B.PIZZA_ID, B.PRICE FROM PIZZA_TYPES A JOIN PIZZAS B
ON A.PIZZA_TYPE_ID = B.PIZZA_TYPE_ID) A JOIN PIZZA_ORDER_DETAILS B ON A.PIZZA_ID = B.PIZZA_ID
GROUP BY A.NAME, A.CATEGORY) C) D WHERE RNK <= 3;
